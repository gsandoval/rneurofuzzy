#!/usr/bin/env jruby
=begin
Last epoch error: 29.9996
Average error: 18.1174
Last epoch: 189
=end
$LOAD_PATH.unshift(File.dirname(__FILE__) + '/../lib') unless $LOAD_PATH.include?(File.dirname(__FILE__) + '/../lib')
require "neurofuzzy"

max = 96.0
raw_data = []
while line = gets
  line = line.chomp
  raw_data.push(Integer(line) / max)
end

input_size = 10
nn = Neurofuzzy::BackPropagationNetwork.new input_size, 1, 7
nn.max_epochs = 100000
nn.max_error = 30.0
nn.learning_rate = 0.3
nn.momentum = 0.5

patterns = []
expected = []
for i in (0..raw_data.size-input_size-1)
  patterns.push(raw_data.drop(i).take(input_size))
  expected.push(raw_data.drop(i + input_size).take(1))
end

nn.trained_weights = [[-0.9979655801075966, -0.06062332317835126, -0.9537504111275285, -0.5917029444419988, -1.9131355212793575, -1.6342864110056248, -1.5327772362480774, -1.1998958135240398, -1.317115662091244, -1.1071300864654865, -0.927059658942611], [-1.1398535059572512, -1.3789762523928224, -0.357939335281172, -1.2977234494263905, -1.2465704370477548, -0.8460027570387971, -0.39641032439781104, -1.164746068636316,-1.409131541836083, -1.098007101363685, -0.9428544901810139], [-1.1291856755345178, -0.5471894442262705, -0.6142985056564385, -2.1002176818993625, -2.2030375728106675, -2.928140329406769, -2.0438193251518837, -1.1982469941146876, 0.5389193605187753, 0.5931452107643476, -1.0627611033843647], [4.788132112774794, 1.1293397141094972, -5.468997899130522, -17.541437057244007, 29.542617895808966, 6.976823038188995, 5.67127694863295, -0.05069645774758555, -2.5434475875149323, -23.941732663363695, 1.5005017920784176], [-12.118398713745288, -4.135417673549575, 5.410882049885241, 13.97961485361801, -39.52793071275973, -13.996375057656117, -8.285480802277897, 4.20077084147662, 12.767794193992286, 54.48438641290031, -6.802665834527159], [-0.8136745670596913, -0.13763877851353898, -0.568064083718749, -1.308977612000306, -1.5090922356210779, -0.7377185340490783, -1.5872123956584046, -0.3123344975427625, -1.614884838837738, -0.9601590874571041, -1.677066408209541], [0.4686139587547148, 1.0393264575900267, 0.230171652051575, -0.916829120506215, 3.938643701476334, 3.059422083138831, 2.5699424798811767, 1.0182918671704457, -1.8926681384831512, -5.349381470582489, 1.131156152918313], [72.96598613505837, 70.75437828091827, 67.90304211157205, 60.955400300722935, 95.05803128354046, 76.88337610095617, 70.84582427588396, 60.194074159996006, 50.154065444790845, 21.407922098689294, 87.99748824488991], [0.42885653300674986, 0.19889583895017457, 1.0619116791137255, -1.8987794675984633, 2.3403886745242146, 0.24135592088892066, -1.5049915498963662, -1.4364299310575095]]

patterns.map {|p| puts(nn.classify(p).map {|c| c * max}[0])}

#sum = 0
#output.zip(expected).each {|o, e| sum += (o[0] - e[0]).abs}
#puts sum / output.size
